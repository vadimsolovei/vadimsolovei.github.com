a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}body{font:16px Montserrat,sans-serif;background:#111b2d}.hidden{display:none}@media (max-width:10000px),(orientation:landscape) and (max-height:575px){.header{position:absolute;top:35px;left:50%;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);z-index:1}.header__socials{display:none}.header__logo{position:relative}.header__logo::before{content:"";position:absolute;top:0;bottom:0;right:0;left:0;background-color:rgba(25,53,102,.4);-webkit-filter:blur(50px);filter:blur(50px);z-index:-1}}@media (min-width:768px) and (min-height:575px){.header{max-width:1140px;width:100%}.header__in{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center;padding:0 25px}.header__socials{display:block}.header__socials .button{display:none}}.logo svg{width:120px;height:120px}.heading{font-weight:600;color:#fff}.heading_h1{margin-bottom:20px;font-size:48px;line-height:48px}.heading_h2{font-size:32px;line-height:32px}.heading_h3{font-size:24px;line-height:24px}.heading_h4{margin-bottom:10px;line-height:24px;font-weight:500}@media (max-width:425px){.heading_h1{font-size:35px;line-height:35px}}@media (min-width:768px) and (min-height:575px){.heading_h1{font-size:72px;line-height:72px}}.subheading{color:rgba(255,255,255,.6);line-height:24px}@media (max-width:10000px),(orientation:landscape) and (max-height:575px){.hero{position:relative;height:100vh}.hero__background{position:fixed;top:0;left:0;height:100%;width:100%;z-index:-1}.hero__background img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.hero__background::before{content:"";position:absolute;width:100%;height:270px;left:0;top:0;background:-webkit-gradient(linear,left top,left bottom,from(#2654a8),to(rgba(30,82,163,0)));background:linear-gradient(180deg,#2654a8 0,rgba(30,82,163,0) 100%);opacity:.6}.hero__background::after{content:"";position:absolute;width:100%;height:455px;left:0;bottom:0;background:-webkit-gradient(linear,left bottom,left top,from(#111b2d),to(rgba(12,55,121,0)));background:linear-gradient(0deg,#111b2d 0,rgba(12,55,121,0) 100%)}.hero__inner{padding:0 25px;position:absolute;bottom:70px}.hero__text{position:absolute;top:90px;opacity:0}.hero__socials{display:none}}@media (min-width:425px){.hero__text{top:110px}}@media (min-width:768px) and (min-height:575px){.hero__background{position:relative}.hero__socials{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;position:relative;margin-bottom:0;z-index:1}.hero__socials .facebook,.hero__socials .instagram{display:none}.hero__text{position:static;margin-bottom:20px;width:360px;opacity:1}.hero__text p{width:285px}}.button{display:inline-block;padding:16px 24px;font-size:14px;font-weight:600;text-decoration:none;border-radius:30px}.button:hover{cursor:pointer;-webkit-transition:.2s;transition:.2s}.button svg{width:24px;height:24px;margin-right:10px;vertical-align:middle}.button.number{background:#ffc700;color:#111b2d}.button.number:hover{background:#cc9f00}.button.telegram{border:1px solid rgba(255,255,255,.2);color:#ffc700}.button.telegram:hover{background:#ffc700;color:#111b2d}.button.telegram:hover svg{fill:#111b2d}.button.telegram svg{fill:#ffc700}@media (min-width:768px){.block__in{max-width:1140px;margin:0 auto}}.grid{padding:80px 25px}.grid__item{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;margin-bottom:50px}.grid__item:last-child{margin-bottom:30px}.grid__item-icon{margin-right:20px}.grid__item-icon svg{width:64px;height:64px}.grid__item-header{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;margin-bottom:15px}.grid__item-header>.heading{width:180px}.grid__item-content{margin-left:84px;color:rgba(255,255,255,.6)}.grid__item-price{position:absolute;bottom:-35px;left:0;font-size:32px;line-height:32px;color:#ffc700}@media (min-width:768px){.grid{background-color:rgba(16,112,201,.1)}}@media (min-width:1024px){.grid__in{display:-webkit-box;display:flex;flex-wrap:wrap}.grid__item{width:33%}.grid__item-content{max-width:255px}}.splide{z-index:1}.splide__slide img{width:155px;height:155px;-o-object-fit:cover;object-fit:cover}@media (min-width:1024px) and (min-height:575px){.splide__slide img{width:272px;height:272px}}.socials{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;position:relative;width:33%}.socials a{-webkit-transition:.2s;transition:.2s}.socials a:hover{-webkit-transform:scale(1.2);transform:scale(1.2)}.socials a.telegram{display:none;margin-left:-20px;padding:18px 20px;border-radius:50%}.socials a.telegram.active{background:#ffc700;-webkit-transform:none;transform:none}.socials a.telegram.active svg{fill:#111b2d}.socials a.telegram svg{fill:#fff}.socials svg{width:24px;height:24px;fill:transparent}.socials__popup{display:none}@media (min-width:768px){.socials a:not(:last-of-type){margin-right:45px}}@media (min-width:768px) and (min-height:575px){.socials__popup{display:block;position:absolute;left:-55px;bottom:-240px;width:177px;padding:24px 32px 24px 24px;background-color:rgba(17,36,61,.9);border-radius:16px}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.socials__popup{background-color:rgba(17,36,61,.6);-webkit-backdrop-filter:blur(60px);backdrop-filter:blur(60px)}}.socials__popup::before{content:"";position:absolute;top:-8px;right:20px;border-style:solid;border-width:0 8px 8px 8px;border-color:transparent transparent rgba(17,36,61,.6) transparent}.socials__popup .heading{color:#ffc700}.socials__popup .subheading{color:#fff;font-weight:500}.socials__popup-close{position:absolute;top:23px;right:18px;background:0 0;border:none;cursor:pointer}.socials__popup-close svg{opacity:.4;stroke:#fff}.socials__popup-close:hover svg{opacity:1}.socials a.telegram{display:inline-block}}.footer{position:relative}.footer_sticky{background:0 0;position:-webkit-sticky;position:sticky;bottom:0;left:0;padding:10px 25px;border-radius:30px 30px 0 0;z-index:5}.footer__in{margin-top:200px;padding:0 25px 20px}.footer__logo{position:absolute;top:200px;left:50%;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);z-index:2}.footer__socials{position:relative;display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;z-index:1}.footer__socials .socials__popup,.footer__socials .telegram{display:none!important}@media (min-width:425px){.footer{background-color:rgba(16,112,201,.1)}.footer_sticky{background-color:transparent}}@media (min-width:768px) and (min-height:575px){.footer_sticky{display:none}}@media (min-width:1024px) and (min-height:575px){.footer{padding:15px 0 70px}.footer__in{margin-top:80px}.footer__logo{top:67%;bottom:unset}}.promo{position:relative;margin-top:210px}.promo__in{position:relative;padding:0 25px}.promo__telegram{margin-bottom:40px}.promo__telegram .telegram{margin-bottom:10px}.promo__telegram p{max-width:460px}.promo__card{background:rgba(17,36,61,.9);margin-bottom:40px;padding:32px;border-radius:16px}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.promo__card{background-color:rgba(17,36,61,.6);-webkit-backdrop-filter:blur(60px);backdrop-filter:blur(60px)}}.promo__card .heading{margin-bottom:8px}.promo__card .heading_h3{color:rgba(255,255,255,.6)}.promo__card .subheading{margin-bottom:32px}.promo__card span{font-size:32px;line-height:32px;font-weight:300;color:#ffc700}.promo__list ul{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;flex-wrap:wrap;margin:32px 0 40px}.promo__list-item{margin:0 20px 32px 0}.promo__list-item span{display:inline-block;margin-bottom:15px;width:20px;border-top:2px solid #5ad9d1}.promo__list-item p{font-size:16px;font-weight:500;color:rgba(255,255,255,.6)}.promo__vehicle{margin-top:35px}.promo__item{background:linear-gradient(71.92deg,#5ad9d1 0,rgba(90,217,209,0) 100%);-webkit-box-flex:1;flex:1 1 0;position:relative;margin-bottom:50px;padding:32px;border-radius:16px}.promo__item img{width:100%}.promo__item img.hydrocycle{max-width:470px}.promo__item img.boat{max-width:585px}.promo__item-title{text-align:right}.promo__item-title p{color:rgba(255,255,255,.6);font-weight:500}.promo__item-title span{color:#fff;font-weight:700}@media (min-width:425px){.promo{margin-top:140px}.promo__list-item{max-width:200px}}@media (min-width:768px) and (min-height:575px){.promo{padding-bottom:80px}.promo::after{content:"";position:absolute;left:0;bottom:0;width:100%;height:30px;background:url(../img/wave.png) repeat-x}.promo__telegram{display:none}.promo__item-title{font-size:24px}.promo__item-title p{line-height:32px}.promo__item-title span{line-height:24px}}@media (min-width:1024px) and (min-height:575px){.promo{margin-top:220px}.promo__card{max-width:460px;position:absolute;top:-440px;right:55px}.promo__list{margin-bottom:140px}.promo__vehicle{display:-webkit-box;display:flex;margin-bottom:30px}.promo__item:first-child{margin-right:15px}.promo__item img.boat{position:absolute;bottom:0;left:-70px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5jc3MiLCJ1dGlscy9yZXNldC5zY3NzIiwidXRpbHMvbm9ybWFsaXplLnNjc3MiLCJjb21tb24vYmFzZS5zY3NzIiwiY29tbW9uL2hlYWRlci5zY3NzIiwiY29tbW9uL2xvZ28uc2NzcyIsImNvbW1vbi9oZWFkaW5nLnNjc3MiLCJjb21tb24vc3ViaGVhZGluZy5zY3NzIiwiY29tbW9uL2hlcm8uc2NzcyIsImNvbW1vbi9idXR0b24uc2NzcyIsImNvbW1vbi9ibG9jay5zY3NzIiwiY29tbW9uL2dyaWQuc2NzcyIsImNvbW1vbi9zbGlkZXIuc2NzcyIsImNvbW1vbi9zb2NpYWxzLnNjc3MiLCJjb21tb24vZm9vdGVyLnNjc3MiLCJjb21tb24vcHJvbW8uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQkEsRUFDQSxLQUNBLFFBQ0EsUUFmQSxPQXlEQSxRQUNBLE1BaUJBLE1BeENBLEVBbkJBLElBTkEsV0FiQSxLQThEQSxPQVRBLFFBWkEsT0FyQkEsS0FDQSxLQXVCQSxHQXRCQSxJQXlDQSxRQXhDQSxJQXRCQSxJQXlDQSxHQUNBLEdBbkJBLEdBd0NBLE1BaEJBLFNBa0JBLFdBREEsT0FFQSxPQWxCQSxLQTNDQSxHQUNBLEdBQ0EsR0FDQSxHQUNBLEdBQ0EsR0F5REEsT0FDQSxPQXRFQSxLQXlDQSxFQW5DQSxPQW9CQSxJQUNBLElBQ0EsSUF1QkEsTUFDQSxPQUpBLEdBOEJBLEtBUEEsS0FDQSxJQW5FQSxPQXlDQSxHQTJCQSxPQTVEQSxFQUVBLElBY0EsRUE2Q0EsS0E1Q0EsRUFDQSxLQTRDQSxRQTNDQSxNQTdCQSxLQThCQSxPQUNBLE9BQ0EsSUF5Q0EsUUF4Q0EsSUFpQkEsTUFFQSxNQUtBLEdBSkEsTUFHQSxHQUZBLE1Bb0JBLEtBbkJBLEdBckJBLEdBR0EsRUFPQSxHQVRBLElBMENBLE1DRUUsT0FBQSxFQUNBLFFBQVMsRUFDVCxPQUFBLEVBQ0EsVUFBQSxLQUNBLEtBQUEsUURBQSxlQUFnQixTQUtsQixRQUNBLE1BQ0EsUUFDQSxXQUNBLE9BQ0EsT0FDQSxPQUNBLE9BQ0EsS0FDQSxJQ0VBLFFBQ0UsUUFBQSxNREVGLEtDRUUsWUFBQSxFREVGLEdBQ0EsR0FDRSxXQUFZLEtBR2QsV0FDQSxFQ0VFLE9BQUEsS0RHRixpQkNBQSxrQkRFQSxRQURBLFNFOUhBLFFBQUEsR0FFQSxRQUFBLEtGa0lBLE1BQ0UsZ0JBQWlCLFNBQ2pCLGVBQUEsRUFHRiw0RUFVQSxLQUNFLFlBQWEsS0FFYix5QkFBMEIsS0FXNUIsS0VySEEsT0FBQSxFRjZIQSxLRXBIMkIsUUFBQSxNRjZIM0IsR0FDRSxVQUFBLElBV0YsR0VuSEEsV0FBQSxZRnNIRSxPQUFRLEVBRVIsU0FBVSxRQVNaLElFckhxQyxLQUFBLElBQU8sU0FBQSxDQUFBLFVGa0k1QyxFRWpIQSxXQUFBLElBT0EsWUZvSEUsY0FBZSxLRWhIakIsZ0JBQUEsVUZvSEUsd0JBQXlCLFVBQVUsT0VoSHJDLGdCQUFBLFVBQUEsT0Z5SEEsRUFDQSxPQUNFLFlBQWEsT0FRZixLRTNHQSxJRjZHQSxLQUFFLEtBQUEsSUFBQSxTQUFBLENBQUEsVUFVRixNRXZHQSxVQUFBLElGZ0hBLElBQ0EsSUUxR3FCLFVBQUEsSUFDbkIsWUFBUyxFQUFFLFNBQU8sU0Y2R2xCLGVBQWdCLFNBR2xCLElBQUUsT0FBQSxPQUlGLElFekdFLElBQUEsTUZvSEYsSUV0R0EsYUFBQSxLRmtIQSxPRW5HQSxNRnFHQSxTQUNBLE9BQ0EsU0VuR0UsS0FBQSxJQUFBLENBQUEsS0FBQSxRRndHQSxPQUFRLEVBU1YsT0FDQSxNRTlGRSxTQUFBLFFBVUYsT0YrRkEsT0U3RkUsZUFBYyxLRnVHaEIsY0FDQSxhQUNBLGNBSEEsT0UvRkEsbUJBQUEsT0YyR0EsZ0NFL0ZBLCtCRmlHQSxnQ0FIQSx5QkFJRSxhQUFjLEtFOUZoQixRQUFBLEVGdUdBLDZCQUNBLDRCQUNBLDZCQUhBLHNCRTNGQSxRQUFBLElBQUEsT0FBQSxXQVNBLFNGOEZFLFFBQVMsTUFBTyxNQUFPLE9BVXpCLE9BQUUsV0FBQSxXRXpGQSxNQUFBLFFBR0YsUUFBQSxNRjZGRSxVQUFXLEtFeEZiLFFBQUEsRUFDOEIsWUFBQSxPRm1HOUIsU0V4RkEsZUFBQSxTRmdHQSxTQUNFLFNBQVUsS0FRWixnQkVsRkEsYUZvRkUsV0FBWSxXQUNkLFFBQUEsRUFTQSx5Q0doYkEseUNBQ0UsT0FBQSxLSHliRixjQUNFLG1CSTNiWSxVSjZiWixlSTFiSSxLSmtjTix5Q0FDRSxtQkl2YmEsS0orYmYsNkJBQ0UsbUJJcGJhLE9Kc2JiLEtJbmJJLFFKOGJOLFFLbGVBLFFBQUEsTUwwZUEsUUFDRSxRTXRlRSxVTmdmSixTQUNFLFFNaGVFLEtOdWVKLFNNemRBLFFBQUEsS0NwQ0EsS0FDRSxLQUFBLEtBQUEsVUFBQSxDQUFBLFdBQ0EsV0FBQSxRUHNnQkYsUUFDRSxRUXZnQkUsS1IwZ0JKLDJCUXRnQnFCLCtDUnVnQm5CLFFBQ0UsU1F0Z0JTLFNSdWdCVCxJUXRnQkUsS1J1Z0JGLEtRdGdCRSxJUnVnQkYsa0JRdGdCYSxrQlJ1Z0JiLFVRN2dCQyxrQlI4Z0JELFFRcmdCSSxFUndnQk4saUJBQ0UsUVFsaEJDLEtScWhCSCxjQUNFLFNRcGdCSSxTUnVnQk4sc0JBQ0UsUVFyZ0JJLEdSc2dCSixTUWpnQkksU1JrZ0JKLElRNWhCQyxFUjZoQkQsT1EvZkksRVJnZ0JKLE1RL2ZJLEVSZ2dCSixLUS9mSSxFUmdnQkosaUJRL2ZpQixtQlJnZ0JqQixlUS9mVyxXUmdnQlgsT1EvZkksV1JnZ0JKLFFRL2ZJLElSbWdCUixnREFDRSxRUXRmRSxVQUFBLE9Sd2ZBLE1RdmZFLEtSMGZKLFlBQ0UsUVFyZkUsWVJzZkYsUUFBUyxLUWpmYixpQkFBQSxRQUVJLGdCQUFBLGNBQ0Usa0JBQ0QsT1JpZkQsWUFBYSxPUTdlakIsUUFBQSxFQUFBLEtBTUksaUJBQ0UsUUFBQSxNUjhlSix5QlE1ZUksUUFBQSxNUmlmTixVQUNFLE1RNWVNLE1BSUosT0FBQSxNUjRlSixTQUNFLFlRemVjLElSMGVkLE1ROWVHLEtDOUZMLFlBQ0UsY0FBQSxLQUNBLFVBQUEsS0FDQSxZQUFBLEtUa2xCRixZU3JsQkEsVUFBQSxLVHVsQkUsWVM5a0JFLEtUaWxCSixZQUNFLFVTN2tCRSxLVDhrQkYsWVM3a0JFLEtUZ2xCSixZQUNFLGNTM2tCRSxLVDRrQkYsWVMza0JFLEtUNGtCRixZU2xtQkYsSVRxbUJBLHlCQUNFLFlTdG1CRixVQUFBLEtUd21CSSxZU3RrQkUsTVQwa0JOLGdEQUNFLFlBQ0UsVUFBVyxLVTltQmYsWUFBQSxNVm1uQkEsWVdubkJBLE1BQUEscUJBQ0UsWUFBQSxLWHVuQkYsMkJXcG5CaUIsK0NYcW5CZixNV3BuQkUsU0FBQSxTQUFBLE9BQUEsTVh5bkJGLGtCV2xuQkUsU0FBQSxNWG9uQkEsSVdubkJFLEVYb25CRixLV3JuQkMsRVhzbkJELE9XbG5CSSxLWG1uQkosTVdsbkJJLEtBSUosUUFBQSxHWGtuQkYsc0JBQ0UsTVdqbkJFLEtYa25CRixPV2puQkUsS1hrbkJGLGNXcm5CQyxNWHNuQkQsV1dobkJJLE1YbW5CTiwwQlcxbUJFLFFBQUEsR1g0bUJBLFNXM21CRSxTWDRtQkYsTVczbUJFLEtYNG1CRixPVzNtQkUsTVg0bUJGLEtXM21CRSxFWDRtQkYsSVczbUJFLEVYNG1CRixXVzNtQkUsa0ZYNG1CRixXQUFZLHlEV3ZtQmhCLFFBQUEsR1gybUJFLHlCV3JtQkYsUUFBQSxHQUVJLFNBQUEsU0FDRSxNQUFBLEtBQUEsT0FBQSxNQUNBLEtBQUEsRUFHRixPQUFBLEVBQ0UsV0FBVSxrRkFFVixXQUFBLHVEQy9ETixhQUNFLFFBQVUsRUFBQSxLQUVULFNBQUEsU0FFRyxPQUFBLEtac3FCSixZQUNFLFNBQVUsU1locUJkLElBQUEsS0FFSyxRQUFBLEVabXFCSCxlYWpyQkYsUUFBQSxNYnNyQkEseUJhbnJCRSxZQUFBLElBQUEsT2J5ckJGLGdEQUNFLGtCYTdyQkYsU0FBQSxTYmlzQkUsZUFDRSxRYW5yQkUsWWJvckJGLFFhbnJCRSxLYm9yQkYsaUJhbnJCRSxRYm9yQkYsZ0JhbnJCRSxjYm9yQkYsU2F0c0JKLFNidXNCSSxjYWxyQkksRWJtckJKLFFhbHJCSSxFYnFyQk4seUJBQ0EsMEJBQ0UsUWEvcUJJLEtia3JCTixZYTFxQkUsU0FBQSxPQUdGLGNBQUEsS0FDRSxNQUFBLE1iMHFCQSxRQUFTLEVBR1gsY0FDRSxNQUFPLE9BSVgsUUFDRSxRYWxxQkksYWJtcUJKLFFhbHFCSSxLQUFBLEtibXFCSixVYWxxQkksS2JtcUJKLFlhbHFCSSxJYm1xQkosZ0JhbHFCSSxLYm1xQkosY2FscUJJLEticXFCTixjQUNFLE9hbHFCTSxRYm1xQk4sbUJhbnFCTSxJYm9xQk4sV2FockJHLElibXJCTCxZQUNFLE1hanFCTSxLYmtxQk4sT2FqcUJNLEtia3FCTixhYWpxQk0sS2JrcUJOLGVhanFCTSxPYm9xQlIsZUFDRSxXYTdwQk0sUWI4cEJOLE1hN3BCTSxRYmdxQlIscUJBQ0UsV2EzcEJNLFFiOHBCUixpQkFDRSxPYWxxQkssSUFBQSxNQUFBLHFCYm1xQkwsTWExcEJRLFFiNnBCVix1QmF6c0JFLFdBQUEsUWIyc0JBLE1hbnBCTSxRYnNwQlIsMkJjbHdCRSxLQUFBLFFkc3dCRixxQkFDRSxLY3B3QkUsUWR1d0JKLHlCQUNFLFdjandCQSxVQUFBLE9BQ0UsT0FBQSxFQUFBLE1kc3dCSixNQUNFLFFjaHdCRSxLQUFTLEtkbXdCYixZYzl2QkUsUUFBQSxZZGd3QkEsUWMvdkJFLEtkZ3dCRixtQmMvdkJFLFNkZ3dCRixzQmNod0JlLE9kaXdCZixlY2h3QkUsT2Rpd0JGLGNjandCRSxLZG93QkosdUJBQ0UsY2Nod0JJLEtkbXdCTixpQkFDRSxhYzd2QkUsS2Rnd0JKLHFCY3h2QkEsTUFBQSxLQUVJLE9BQUEsS0FNSixtQkFDRSxRQUFBLFlkc3ZCQSxRY3J2QkUsS2RzdkJGLGtCY3B2QkUsT2RxdkJGLFljcHZCSSxPZHF2QkosY2NsdkJFLEtkcXZCSiw0QmV0ekJBLE1BQUEsTWYwekJBLG9CQUNFLFlldHpCRSxLZnV6QkYsTWV0ekJFLHFCZnl6Qkosa0JBQ0UsU2VuekJJLFNmb3pCSixPZXh6QkMsTWZ5ekJELEtlanpCSSxFQUlKLFVBQUEsS2YreUJBLFllOXlCRSxLZit5QkYsTWU5eUJFLFFmaXpCSix5QkFDRSxNQUNFLGlCZTl5QkUscUJma3pCTiwwQkFDRSxVQUNFLFFlM3lCRSxZQWhCSCxRQUFBLEtmNnpCQyxVZXp5QkUsS2Y0eUJKLFlBQ0UsTWV2eUJFLElmMHlCSixvQmVueUJJLFVBQUEsT2Z3eUJOLFFlbHlCSSxRQUFBLEVmc3lCSixtQkFDRSxNZWx5Qk0sTWZteUJOLE9lbHlCTSxNZm15Qk4sY2VseUJNLE1mbXlCTixXZTF5QkcsTWY2eUJMLGlEZTN4QkUsbUJBQ0UsTUFBQSxNQUdGLE9BQUEsT2Y4eEJGLFNBQ0UsUWUzeEJFLFlmNHhCRixRZTN4QkUsS2Y0eEJGLGtCZXZ4QkUsT2Z3eEJGLFllbHlCQyxPZm15QkQsaUJldHhCZSxRZnV4QmYsZ0JlcHlCQyxjZnF5QkQsU2VyeEJNLFNmc3hCTixNZXR5QkMsSWZ5eUJILFdBQ0UsbUJlbHhCRyxJZm14QkgsV2Uvd0JNLElma3hCUixpQkFDRSxrQmU5d0JNLFdmK3dCTixVQUFXLFdBR2Isb0JBQ0UsUWV6d0JFLEtmMHdCRixZZXp3QkksTWYwd0JKLFFBQVMsS0FBSyxLZXJ3QmhCLGNBQUEsSWZ5d0JBLDJCQUNFLFdlcndCSSxRZnN3Qkosa0JlcndCSSxLZnN3QkosVWVyd0JXLEtmd3dCYiwrQkFDRSxLZXJ3QkksUWZ3d0JOLHdCQUNFLEtlaHdCTSxLZm13QlIsYUFDRSxNZTl2QlEsS2YrdkJSLE9BQVEsS2V4dkJWLEtBQUEsWWY0dkJBLGdCQUNFLFFleHZCSSxLZjJ2Qk4seUJBQ0UsOEJBQ0UsYWV0dkJFLE1mMHZCTixnREFDRSxnQkFDRSxRZWx2QkksTUFGSCxTQUFBLFNmc3ZCRCxLZS91Qk0sTWZndkJOLE9lL3VCTSxPZmd2Qk4sTWUvdUJNLE1mZ3ZCTixRQUFTLEtBQUssS0FBSyxLQUFLLEtBQ3hCLGlCQUFrQixrQkFDbEIsY0FBZSxLQUduQixpRkFDSSxnQkFDRSxpQkFBa0Isa0JBQ2xCLHdCQUF5QixXQUN6QixnQkFBaUIsWUFJckIsd0JBQ0UsUUFBUyxHQUNULFNBQVUsU0FDVixJQUFLLEtBQ0wsTUFBTyxLQUNQLGFBQWMsTUFDZCxhQUFjLEVBQUUsSUFBSSxJQUFJLElBQ3hCLGFBQWMsWUFBWSxZQUFZLGtCQUFzQixZQUc5RCx5QkFDRSxNQUFPLFFBR1QsNEJBQ0UsTUFBTyxLQUNQLFlBQWEsSUFHZixzQkFDRSxTQUFVLFNBQ1YsSUFBSyxLQUNMLE1BQU8sS0FDUCxXQUFZLElBQ1osT0FBUSxLQUNSLE9BQVEsUUFHViwwQkFDRSxRQUFTLEdBQ1QsT0FBUSxLQUdWLGdDQUNFLFFBQVMsRUFHWCxvQkFDRSxRQUFTLGNBSWIsUUFDRSxTQUFVLFNBR1osZUFDRSxXQUFZLElBQ1osU0FBVSxlQUNWLFNBQVUsT0FDVixPQUFRLEVBQ1IsS0FBTSxFQUNOLFFBQVMsS0FBSyxLQUNkLGNBQWUsS0FBSyxLQUFLLEVBQUUsRUFDM0IsUUFBUyxFQUdYLFlBQ0UsV0FBWSxNQUNaLFFBQVMsRUFBRSxLQUFLLEtBR2xCLGNBQ0UsU0FBVSxTQUNWLElBQUssTUFDTCxLQUFNLElBQ04sa0JBQW1CLGtCQUNuQixVQUFXLGtCQUNYLFFBQVMsRUFHWCxpQkFDRSxTQUFVLFNBQ1YsUUFBUyxZQUNULFFBQVMsS0FDVCxpQkFBa0IsUUFDbEIsZ0JBQWlCLGNBQ2pCLFFBQVMsRUFJWCxpQ0FEQSwyQkFFRSxRQUFTLGVBR1gseUJBQ0UsUUFDRSxpQkFBa0Isb0JBR3BCLGVBQ0UsaUJBQWtCLGFBSXRCLGdEQUNFLGVBQ0UsUUFBUyxNQUliLGlEQUNFLFFBQ0UsUUFBUyxLQUFLLEVBQUUsS0FHbEIsWUFDRSxXQUFZLEtBR2QsY0FDRSxJQUFLLElBQ0wsT0FBUSxPQUlaLE9BQ0UsU0FBVSxTQUNWLFdBQVksTUFHZCxXQUNFLFNBQVUsU0FDVixRQUFTLEVBQUUsS0FHYixpQkFDRSxjQUFlLEtBR2pCLDJCQUNFLGNBQWUsS0FHakIsbUJBQ0UsVUFBVyxNQUdiLGFBQ0UsV0FBWSxrQkFDWixjQUFlLEtBQ2YsUUFBUyxLQUNULGNBQWUsS0FHakIsaUZBQ0UsYUFDRSxpQkFBa0Isa0JBQ2xCLHdCQUF5QixXQUN6QixnQkFBaUIsWUFJckIsc0JBQ0UsY0FBZSxJQUdqQix5QkFDRSxNQUFPLHFCQUdULHlCQUNFLGNBQWUsS0FHakIsa0JBQ0UsVUFBVyxLQUNYLFlBQWEsS0FDYixZQUFhLElBQ2IsTUFBTyxRQUdULGdCQUNFLFFBQVMsWUFDVCxRQUFTLEtBQ1QsaUJBQWtCLFFBQ2xCLGdCQUFpQixjQUNqQixVQUFXLEtBQ1gsT0FBUSxLQUFLLEVBQUUsS0FHakIsa0JBQ0UsT0FBUSxFQUFFLEtBQUssS0FBSyxFQUd0Qix1QkFDRSxRQUFTLGFBQ1QsY0FBZSxLQUNmLE1BQU8sS0FDUCxXQUFZLElBQUksTUFBTSxRQUd4QixvQkFDRSxVQUFXLEtBQ1gsWUFBYSxJQUNiLE1BQU8scUJBR1QsZ0JBQ0UsV0FBWSxLQUdkLGFBQ0UsV0FBWSw0REFDWixpQkFBa0IsRUFDbEIsS0FBTSxFQUFFLEVBQUUsRUFDVixTQUFVLFNBQ1YsY0FBZSxLQUNmLFFBQVMsS0FDVCxjQUFlLEtBR2pCLGlCQUNFLE1BQU8sS0FHVCw0QkFDRSxVQUFXLE1BR2Isc0JBQ0UsVUFBVyxNQUdiLG1CQUNFLFdBQVksTUFHZCxxQkFDRSxNQUFPLHFCQUNQLFlBQWEsSUFHZix3QkFDRSxNQUFPLEtBQ1AsWUFBYSxJQUdmLHlCQUNFLE9BQ0UsV0FBWSxNQUdkLGtCQUNFLFVBQVcsT0FJZixnREFDRSxPQUNFLGVBQWdCLEtBR2xCLGNBQ0UsUUFBUyxHQUNULFNBQVUsU0FDVixLQUFNLEVBQ04sT0FBUSxFQUNSLE1BQU8sS0FDUCxPQUFRLEtBQ1IsV0FBWSxxQkFBdUIsU0FHckMsaUJBQ0UsUUFBUyxLQUdYLG1CQUNFLFVBQVcsS0FHYixxQkFDRSxZQUFhLEtBR2Ysd0JBQ0UsWUFBYSxNQUlqQixpREFDRSxPQUNFLFdBQVksTUFHZCxhQUNFLFVBQVcsTUFDWCxTQUFVLFNBQ1YsSUFBSyxPQUNMLE1BQU8sS0FHVCxhQUNFLGNBQWUsTUFHakIsZ0JBQ0UsUUFBUyxZQUNULFFBQVMsS0FDVCxjQUFlLEtBR2pCLHlCQUNFLGFBQWMsS0FHaEIsc0JBQ0UsU0FBVSxTQUNWLE9BQVEsRUFDUixLQUFNIiwiZmlsZSI6InN0eWxlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyBcclxuICAgdjIuMCB8IDIwMTEwMTI2XHJcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXHJcbiovXG5odG1sLFxuYm9keSxcbmRpdixcbnNwYW4sXG5hcHBsZXQsXG5vYmplY3QsXG5pZnJhbWUsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxuYmxvY2txdW90ZSxcbnByZSxcbmEsXG5hYmJyLFxuYWNyb255bSxcbmFkZHJlc3MsXG5iaWcsXG5jaXRlLFxuY29kZSxcbmRlbCxcbmRmbixcbmVtLFxuaW1nLFxuaW5zLFxua2JkLFxucSxcbnMsXG5zYW1wLFxuc21hbGwsXG5zdHJpa2UsXG5zdHJvbmcsXG5zdWIsXG5zdXAsXG50dCxcbnZhcixcbmIsXG51LFxuaSxcbmNlbnRlcixcbmRsLFxuZHQsXG5kZCxcbm9sLFxudWwsXG5saSxcbmZpZWxkc2V0LFxuZm9ybSxcbmxhYmVsLFxubGVnZW5kLFxudGFibGUsXG5jYXB0aW9uLFxudGJvZHksXG50Zm9vdCxcbnRoZWFkLFxudHIsXG50aCxcbnRkLFxuYXJ0aWNsZSxcbmFzaWRlLFxuY2FudmFzLFxuZGV0YWlscyxcbmVtYmVkLFxuZmlndXJlLFxuZmlnY2FwdGlvbixcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1lbnUsXG5uYXYsXG5vdXRwdXQsXG5ydWJ5LFxuc2VjdGlvbixcbnN1bW1hcnksXG50aW1lLFxubWFyayxcbmF1ZGlvLFxudmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tZW51LFxubmF2LFxuc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTsgfVxuXG5vbCxcbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG5ibG9ja3F1b3RlLFxucSB7XG4gIHF1b3Rlczogbm9uZTsgfVxuXG5ibG9ja3F1b3RlOmJlZm9yZSxcbmJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSxcbnE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cclxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcclxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXHJcbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxyXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cclxuICogYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxyXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKiBGb3Jtc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXHJcbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cclxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICovXG5idXR0b24sXG5bdHlwZT0nYnV0dG9uJ10sXG5bdHlwZT0ncmVzZXQnXSxcblt0eXBlPSdzdWJtaXQnXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPSdidXR0b24nXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPSdyZXNldCddOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9J3N1Ym1pdCddOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxyXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9J2J1dHRvbiddOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9J3Jlc2V0J106LW1vei1mb2N1c3JpbmcsXG5bdHlwZT0nc3VibWl0J106LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cclxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XHJcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cclxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cclxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxyXG4gKi9cblt0eXBlPSdjaGVja2JveCddLFxuW3R5cGU9J3JhZGlvJ10ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cblt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxyXG4gKi9cblt0eXBlPSdzZWFyY2gnXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cclxuICovXG5bdHlwZT0nc2VhcmNoJ106Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qIEludGVyYWN0aXZlXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxyXG4gKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBNaXNjXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxyXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXHJcbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIE1haW4gc3R5bGVzICovXG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzExMWIyZDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7IH1cblxuLmhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMDAwcHgpLCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkgYW5kIChtYXgtaGVpZ2h0OiA1NzVweCkge1xuICAuaGVhZGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAzNXB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgICB6LWluZGV4OiAxOyB9XG4gICAgLmhlYWRlcl9fc29jaWFscyB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLmhlYWRlcl9fbG9nbyB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAgIC5oZWFkZXJfX2xvZ286OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIHJpZ2h0OiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1LCA1MywgMTAyLCAwLjQpO1xuICAgICAgICBmaWx0ZXI6IGJsdXIoNTBweCk7XG4gICAgICAgIHotaW5kZXg6IC0xOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5oZWFkZXIge1xuICAgIG1heC13aWR0aDogMTE0MHB4O1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLmhlYWRlcl9faW4ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAwIDI1cHg7IH1cbiAgICAuaGVhZGVyX19zb2NpYWxzIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgICAuaGVhZGVyX19zb2NpYWxzIC5idXR0b24ge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuLmxvZ28gc3ZnIHtcbiAgd2lkdGg6IDEyMHB4O1xuICBoZWlnaHQ6IDEyMHB4OyB9XG5cbi5oZWFkaW5nIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6IHdoaXRlOyB9XG4gIC5oZWFkaW5nX2gxIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogNDhweDtcbiAgICBsaW5lLWhlaWdodDogNDhweDsgfVxuICAuaGVhZGluZ19oMiB7XG4gICAgZm9udC1zaXplOiAzMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAzMnB4OyB9XG4gIC5oZWFkaW5nX2gzIHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7IH1cbiAgLmhlYWRpbmdfaDQge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDI1cHgpIHtcbiAgLmhlYWRpbmdfaDEge1xuICAgIGZvbnQtc2l6ZTogMzVweDtcbiAgICBsaW5lLWhlaWdodDogMzVweDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4taGVpZ2h0OiA1NzVweCkge1xuICAuaGVhZGluZ19oMSB7XG4gICAgZm9udC1zaXplOiA3MnB4O1xuICAgIGxpbmUtaGVpZ2h0OiA3MnB4OyB9IH1cblxuLnN1YmhlYWRpbmcge1xuICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpO1xuICBsaW5lLWhlaWdodDogMjRweDsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTAwMDBweCksIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSBhbmQgKG1heC1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5oZXJvIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiAxMDB2aDsgfVxuICAgIC5oZXJvX19iYWNrZ3JvdW5kIHtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHotaW5kZXg6IC0xOyB9XG4gICAgICAuaGVyb19fYmFja2dyb3VuZCBpbWcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuICAgICAgLmhlcm9fX2JhY2tncm91bmQ6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMjcwcHg7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzI2NTRhOCAwJSwgcmdiYSgzMCwgODIsIDE2MywgMCkgMTAwJSk7XG4gICAgICAgIG9wYWNpdHk6IDAuNjsgfVxuICAgICAgLmhlcm9fX2JhY2tncm91bmQ6OmFmdGVyIHtcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiA0NTVweDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgIzExMWIyZCAwJSwgcmdiYSgxMiwgNTUsIDEyMSwgMCkgMTAwJSk7IH1cbiAgICAuaGVyb19faW5uZXIge1xuICAgICAgcGFkZGluZzogMCAyNXB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiA3MHB4OyB9XG4gICAgLmhlcm9fX3RleHQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA5MHB4O1xuICAgICAgb3BhY2l0eTogMDsgfVxuICAgIC5oZXJvX19zb2NpYWxzIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNDI1cHgpIHtcbiAgLmhlcm9fX3RleHQge1xuICAgIHRvcDogMTEwcHg7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcbiAgLmhlcm9fX2JhY2tncm91bmQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaGVyb19fc29jaWFscyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgei1pbmRleDogMTsgfVxuICAgIC5oZXJvX19zb2NpYWxzIC5mYWNlYm9vayxcbiAgICAuaGVyb19fc29jaWFscyAuaW5zdGFncmFtIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmhlcm9fX3RleHQge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB3aWR0aDogMzYwcHg7XG4gICAgb3BhY2l0eTogMTsgfVxuICAgIC5oZXJvX190ZXh0IHAge1xuICAgICAgd2lkdGg6IDI4NXB4OyB9IH1cblxuLmJ1dHRvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMTZweCAyNHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogMzBweDsgfVxuICAuYnV0dG9uOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogMC4yczsgfVxuICAuYnV0dG9uIHN2ZyB7XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5idXR0b24ubnVtYmVyIHtcbiAgICBjb2xvcjogIzExMWIyZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjNzAwOyB9XG4gICAgLmJ1dHRvbi5udW1iZXI6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2NjOWYwMDsgfVxuICAuYnV0dG9uLnRlbGVncmFtIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG4gICAgY29sb3I6ICNmZmM3MDA7IH1cbiAgICAuYnV0dG9uLnRlbGVncmFtOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmM3MDA7XG4gICAgICBjb2xvcjogIzExMWIyZDsgfVxuICAgICAgLmJ1dHRvbi50ZWxlZ3JhbTpob3ZlciBzdmcge1xuICAgICAgICBmaWxsOiAjMTExYjJkOyB9XG4gICAgLmJ1dHRvbi50ZWxlZ3JhbSBzdmcge1xuICAgICAgZmlsbDogI2ZmYzcwMDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmJsb2NrX19pbiB7XG4gICAgbWF4LXdpZHRoOiAxMTQwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG4uZ3JpZCB7XG4gIHBhZGRpbmc6IDgwcHggMjVweDsgfVxuICAuZ3JpZF9faXRlbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7IH1cbiAgICAuZ3JpZF9faXRlbTpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cbiAgICAuZ3JpZF9faXRlbS1pY29uIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMjBweDsgfVxuICAgICAgLmdyaWRfX2l0ZW0taWNvbiBzdmcge1xuICAgICAgICB3aWR0aDogNjRweDtcbiAgICAgICAgaGVpZ2h0OiA2NHB4OyB9XG4gICAgLmdyaWRfX2l0ZW0taGVhZGVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDsgfVxuICAgICAgLmdyaWRfX2l0ZW0taGVhZGVyID4gLmhlYWRpbmcge1xuICAgICAgICB3aWR0aDogMTgwcHg7IH1cbiAgICAuZ3JpZF9faXRlbS1jb250ZW50IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4NHB4O1xuICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTsgfVxuICAgIC5ncmlkX19pdGVtLXByaWNlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogLTM1cHg7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDMycHg7XG4gICAgICBjb2xvcjogI2ZmYzcwMDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmdyaWQge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTYsIDExMiwgMjAxLCAwLjEpOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuZ3JpZF9faW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwOyB9XG4gIC5ncmlkX19pdGVtIHtcbiAgICB3aWR0aDogMzMlOyB9XG4gICAgLmdyaWRfX2l0ZW0tY29udGVudCB7XG4gICAgICBtYXgtd2lkdGg6IDI1NXB4OyB9IH1cblxuLnNwbGlkZSB7XG4gIHotaW5kZXg6IDE7IH1cbiAgLnNwbGlkZV9fc2xpZGUgaW1nIHtcbiAgICB3aWR0aDogMTU1cHg7XG4gICAgaGVpZ2h0OiAxNTVweDtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5zcGxpZGVfX3NsaWRlIGltZyB7XG4gICAgd2lkdGg6IDI3MnB4O1xuICAgIGhlaWdodDogMjcycHg7IH0gfVxuXG4uc29jaWFscyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMzMlOyB9XG4gIC5zb2NpYWxzIGEge1xuICAgIHRyYW5zaXRpb246IDAuMnM7IH1cbiAgICAuc29jaWFscyBhOmhvdmVyIHtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTsgfVxuICAgIC5zb2NpYWxzIGEudGVsZWdyYW0ge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMjBweDtcbiAgICAgIHBhZGRpbmc6IDE4cHggMjBweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuICAgICAgLnNvY2lhbHMgYS50ZWxlZ3JhbS5hY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjNzAwO1xuICAgICAgICB0cmFuc2Zvcm06IG5vbmU7IH1cbiAgICAgICAgLnNvY2lhbHMgYS50ZWxlZ3JhbS5hY3RpdmUgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAjMTExYjJkOyB9XG4gICAgICAuc29jaWFscyBhLnRlbGVncmFtIHN2ZyB7XG4gICAgICAgIGZpbGw6IHdoaXRlOyB9XG4gIC5zb2NpYWxzIHN2ZyB7XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgaGVpZ2h0OiAyNHB4O1xuICAgIGZpbGw6IHRyYW5zcGFyZW50OyB9XG4gIC5zb2NpYWxzX19wb3B1cCB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNvY2lhbHMgYTpub3QoOmxhc3Qtb2YtdHlwZSkge1xuICAgIG1hcmdpbi1yaWdodDogNDVweDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtaW4taGVpZ2h0OiA1NzVweCkge1xuICAuc29jaWFsc19fcG9wdXAge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtNTVweDtcbiAgICBib3R0b206IC0yNDBweDtcbiAgICB3aWR0aDogMTc3cHg7XG4gICAgcGFkZGluZzogMjRweCAzMnB4IDI0cHggMjRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE3LCAzNiwgNjEsIDAuOSk7XG4gICAgYm9yZGVyLXJhZGl1czogMTZweDsgfVxuICAgIEBzdXBwb3J0cyAoYmFja2Ryb3AtZmlsdGVyOiBibHVyKDYwcHgpKSB7XG4gICAgICAuc29jaWFsc19fcG9wdXAge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE3LCAzNiwgNjEsIDAuNik7XG4gICAgICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig2MHB4KTsgfSB9XG4gICAgLnNvY2lhbHNfX3BvcHVwOjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJcIjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogLThweDtcbiAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgIGJvcmRlci13aWR0aDogMCA4cHggOHB4IDhweDtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgcmdiYSgxNywgMzYsIDYxLCAwLjYpIHRyYW5zcGFyZW50OyB9XG4gICAgLnNvY2lhbHNfX3BvcHVwIC5oZWFkaW5nIHtcbiAgICAgIGNvbG9yOiAjZmZjNzAwOyB9XG4gICAgLnNvY2lhbHNfX3BvcHVwIC5zdWJoZWFkaW5nIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7IH1cbiAgICAuc29jaWFsc19fcG9wdXAtY2xvc2Uge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAyM3B4O1xuICAgICAgcmlnaHQ6IDE4cHg7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICAuc29jaWFsc19fcG9wdXAtY2xvc2Ugc3ZnIHtcbiAgICAgICAgb3BhY2l0eTogMC40O1xuICAgICAgICBzdHJva2U6IHdoaXRlOyB9XG4gICAgICAuc29jaWFsc19fcG9wdXAtY2xvc2U6aG92ZXIgc3ZnIHtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAuc29jaWFscyBhLnRlbGVncmFtIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH0gfVxuXG4uZm9vdGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5mb290ZXJfc3RpY2t5IHtcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHBhZGRpbmc6IDEwcHggMjVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4IDMwcHggMCAwO1xuICAgIHotaW5kZXg6IDU7IH1cbiAgLmZvb3Rlcl9faW4ge1xuICAgIG1hcmdpbi10b3A6IDIwMHB4O1xuICAgIHBhZGRpbmc6IDAgMjVweCAyMHB4OyB9XG4gIC5mb290ZXJfX2xvZ28ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDIwMHB4O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcbiAgICB6LWluZGV4OiAyOyB9XG4gIC5mb290ZXJfX3NvY2lhbHMge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICB6LWluZGV4OiAxOyB9XG4gICAgLmZvb3Rlcl9fc29jaWFscyAudGVsZWdyYW0sXG4gICAgLmZvb3Rlcl9fc29jaWFscyAuc29jaWFsc19fcG9wdXAge1xuICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA0MjVweCkge1xuICAuZm9vdGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE2LCAxMTIsIDIwMSwgMC4xKTsgfVxuICAgIC5mb290ZXJfc3RpY2t5IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5mb290ZXJfc3RpY2t5IHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtaW4taGVpZ2h0OiA1NzVweCkge1xuICAuZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAxNXB4IDAgNzBweDsgfVxuICAgIC5mb290ZXJfX2luIHtcbiAgICAgIG1hcmdpbi10b3A6IDgwcHg7IH1cbiAgICAuZm9vdGVyX19sb2dvIHtcbiAgICAgIHRvcDogNjclO1xuICAgICAgYm90dG9tOiB1bnNldDsgfSB9XG5cbi5wcm9tbyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLXRvcDogMjEwcHg7IH1cbiAgLnByb21vX19pbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDAgMjVweDsgfVxuICAucHJvbW9fX3RlbGVncmFtIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG4gICAgLnByb21vX190ZWxlZ3JhbSAudGVsZWdyYW0ge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsgfVxuICAgIC5wcm9tb19fdGVsZWdyYW0gcCB7XG4gICAgICBtYXgtd2lkdGg6IDQ2MHB4OyB9XG4gIC5wcm9tb19fY2FyZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTcsIDM2LCA2MSwgMC45KTtcbiAgICBib3JkZXItcmFkaXVzOiAxNnB4OyB9XG4gICAgQHN1cHBvcnRzIChiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCkpIHtcbiAgICAgIC5wcm9tb19fY2FyZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTcsIDM2LCA2MSwgMC42KTtcbiAgICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDYwcHgpOyB9IH1cbiAgICAucHJvbW9fX2NhcmQgLmhlYWRpbmcge1xuICAgICAgbWFyZ2luLWJvdHRvbTogOHB4OyB9XG4gICAgLnByb21vX19jYXJkIC5oZWFkaW5nX2gzIHtcbiAgICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7IH1cbiAgICAucHJvbW9fX2NhcmQgLnN1YmhlYWRpbmcge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMzJweDsgfVxuICAgIC5wcm9tb19fY2FyZCBzcGFuIHtcbiAgICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgIGNvbG9yOiAjZmZjNzAwOyB9XG4gIC5wcm9tb19fbGlzdCB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG1hcmdpbjogMzJweCAwIDQwcHg7IH1cbiAgLnByb21vX19saXN0LWl0ZW0ge1xuICAgIG1hcmdpbjogMCAyMHB4IDMycHggMDsgfVxuICAgIC5wcm9tb19fbGlzdC1pdGVtIHNwYW4ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICM1YWQ5ZDE7IH1cbiAgICAucHJvbW9fX2xpc3QtaXRlbSBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjYpOyB9XG4gIC5wcm9tb19fdmVoaWNsZSB7XG4gICAgbWFyZ2luLXRvcDogMzVweDsgfVxuICAucHJvbW9fX2l0ZW0ge1xuICAgIGZsZXg6IDEgMSAwO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICAgIHBhZGRpbmc6IDMycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGluZWFyLWdyYWRpZW50KDcxLjkyZGVnLCAjNWFkOWQxIDAlLCByZ2JhKDkwLCAyMTcsIDIwOSwgMCkgMTAwJSk7XG4gICAgYm9yZGVyLXJhZGl1czogMTZweDsgfVxuICAgIC5wcm9tb19faXRlbSBpbWcge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAgIC5wcm9tb19faXRlbSBpbWcuaHlkcm9jeWNsZSB7XG4gICAgICAgIG1heC13aWR0aDogNDcwcHg7IH1cbiAgICAgIC5wcm9tb19faXRlbSBpbWcuYm9hdCB7XG4gICAgICAgIG1heC13aWR0aDogNTg1cHg7IH1cbiAgICAucHJvbW9fX2l0ZW0tdGl0bGUge1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgICAgIC5wcm9tb19faXRlbS10aXRsZSBwIHtcbiAgICAgICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42KTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuICAgICAgLnByb21vX19pdGVtLXRpdGxlIHNwYW4ge1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQyNXB4KSB7XG4gIC5wcm9tbyB7XG4gICAgbWFyZ2luLXRvcDogMTQwcHg7IH1cbiAgICAucHJvbW9fX2xpc3QtaXRlbSB7XG4gICAgICBtYXgtd2lkdGg6IDIwMHB4OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XG4gIC5wcm9tbyB7XG4gICAgcGFkZGluZy1ib3R0b206IDgwcHg7IH1cbiAgICAucHJvbW86OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvd2F2ZS5wbmdcIikgcmVwZWF0LXg7IH1cbiAgICAucHJvbW9fX3RlbGVncmFtIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAucHJvbW9fX2l0ZW0tdGl0bGUge1xuICAgICAgZm9udC1zaXplOiAyNHB4OyB9XG4gICAgICAucHJvbW9fX2l0ZW0tdGl0bGUgcCB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAzMnB4OyB9XG4gICAgICAucHJvbW9fX2l0ZW0tdGl0bGUgc3BhbiB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkgYW5kIChtaW4taGVpZ2h0OiA1NzVweCkge1xuICAucHJvbW8ge1xuICAgIG1hcmdpbi10b3A6IDIyMHB4OyB9XG4gICAgLnByb21vX19jYXJkIHtcbiAgICAgIG1heC13aWR0aDogNDYwcHg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IC00NDBweDtcbiAgICAgIHJpZ2h0OiA1NXB4OyB9XG4gICAgLnByb21vX19saXN0IHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDE0MHB4OyB9XG4gICAgLnByb21vX192ZWhpY2xlIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG4gICAgLnByb21vX19pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMTVweDsgfVxuICAgIC5wcm9tb19faXRlbSBpbWcuYm9hdCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAtNzBweDsgfSB9XG4iLCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyBcclxuICAgdjIuMCB8IDIwMTEwMTI2XHJcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXHJcbiovXHJcblxyXG5odG1sLFxyXG5ib2R5LFxyXG5kaXYsXHJcbnNwYW4sXHJcbmFwcGxldCxcclxub2JqZWN0LFxyXG5pZnJhbWUsXHJcbmgxLFxyXG5oMixcclxuaDMsXHJcbmg0LFxyXG5oNSxcclxuaDYsXHJcbnAsXHJcbmJsb2NrcXVvdGUsXHJcbnByZSxcclxuYSxcclxuYWJicixcclxuYWNyb255bSxcclxuYWRkcmVzcyxcclxuYmlnLFxyXG5jaXRlLFxyXG5jb2RlLFxyXG5kZWwsXHJcbmRmbixcclxuZW0sXHJcbmltZyxcclxuaW5zLFxyXG5rYmQsXHJcbnEsXHJcbnMsXHJcbnNhbXAsXHJcbnNtYWxsLFxyXG5zdHJpa2UsXHJcbnN0cm9uZyxcclxuc3ViLFxyXG5zdXAsXHJcbnR0LFxyXG52YXIsXHJcbmIsXHJcbnUsXHJcbmksXHJcbmNlbnRlcixcclxuZGwsXHJcbmR0LFxyXG5kZCxcclxub2wsXHJcbnVsLFxyXG5saSxcclxuZmllbGRzZXQsXHJcbmZvcm0sXHJcbmxhYmVsLFxyXG5sZWdlbmQsXHJcbnRhYmxlLFxyXG5jYXB0aW9uLFxyXG50Ym9keSxcclxudGZvb3QsXHJcbnRoZWFkLFxyXG50cixcclxudGgsXHJcbnRkLFxyXG5hcnRpY2xlLFxyXG5hc2lkZSxcclxuY2FudmFzLFxyXG5kZXRhaWxzLFxyXG5lbWJlZCxcclxuZmlndXJlLFxyXG5maWdjYXB0aW9uLFxyXG5mb290ZXIsXHJcbmhlYWRlcixcclxuaGdyb3VwLFxyXG5tZW51LFxyXG5uYXYsXHJcbm91dHB1dCxcclxucnVieSxcclxuc2VjdGlvbixcclxuc3VtbWFyeSxcclxudGltZSxcclxubWFyayxcclxuYXVkaW8sXHJcbnZpZGVvIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IDA7XHJcbiAgZm9udC1zaXplOiAxMDAlO1xyXG4gIGZvbnQ6IGluaGVyaXQ7XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmRldGFpbHMsXHJcbmZpZ2NhcHRpb24sXHJcbmZpZ3VyZSxcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbmhncm91cCxcclxubWVudSxcclxubmF2LFxyXG5zZWN0aW9uIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5ib2R5IHtcclxuICBsaW5lLWhlaWdodDogMTtcclxufVxyXG5vbCxcclxudWwge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuYmxvY2txdW90ZSxcclxucSB7XHJcbiAgcXVvdGVzOiBub25lO1xyXG59XHJcbmJsb2NrcXVvdGU6YmVmb3JlLFxyXG5ibG9ja3F1b3RlOmFmdGVyLFxyXG5xOmJlZm9yZSxcclxucTphZnRlciB7XHJcbiAgY29udGVudDogJyc7XHJcbiAgY29udGVudDogbm9uZTtcclxufVxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBib3JkZXItc3BhY2luZzogMDtcclxufVxyXG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcblxyXG4vKiBEb2N1bWVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXHJcbiAqL1xyXG5cclxuaHRtbCB7XHJcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cclxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cclxufVxyXG5cclxuLyogU2VjdGlvbnNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuYm9keSB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXHJcbiAqL1xyXG5cclxubWFpbiB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuaDEge1xyXG4gIGZvbnQtc2l6ZTogMmVtO1xyXG4gIC8vIG1hcmdpbjogMC42N2VtIDA7XHJcbn1cclxuXHJcbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICovXHJcblxyXG5ociB7XHJcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cclxuICBoZWlnaHQ6IDA7IC8qIDEgKi9cclxuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnByZSB7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXHJcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxufVxyXG5cclxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAqL1xyXG5cclxuYSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmFiYnJbdGl0bGVdIHtcclxuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYixcclxuc3Ryb25nIHtcclxuICBmb250LXdlaWdodDogYm9sZGVyO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmNvZGUsXHJcbmtiZCxcclxuc2FtcCB7XHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXHJcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnNtYWxsIHtcclxuICBmb250LXNpemU6IDgwJTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gKiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3ViLFxyXG5zdXAge1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1YiB7XHJcbiAgYm90dG9tOiAtMC4yNWVtO1xyXG59XHJcblxyXG5zdXAge1xyXG4gIHRvcDogLTAuNWVtO1xyXG59XHJcblxyXG4vKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cclxuICovXHJcblxyXG5pbWcge1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLyogRm9ybXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQsXHJcbm9wdGdyb3VwLFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xyXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXHJcbiAgbWFyZ2luOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0IHtcclxuICAvKiAxICovXHJcbiAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuc2VsZWN0IHtcclxuICAvKiAxICovXHJcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuW3R5cGU9J2J1dHRvbiddLFxyXG5bdHlwZT0ncmVzZXQnXSxcclxuW3R5cGU9J3N1Ym1pdCddIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT0nYnV0dG9uJ106Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPSdyZXNldCddOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT0nc3VibWl0J106Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cclxuXHJcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9J2J1dHRvbiddOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT0ncmVzZXQnXTotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9J3N1Ym1pdCddOi1tb3otZm9jdXNyaW5nIHtcclxuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuZmllbGRzZXQge1xyXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cclxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5sZWdlbmQge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xyXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXHJcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXHJcbiAgcGFkZGluZzogMDsgLyogMyAqL1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAqL1xyXG5cclxucHJvZ3Jlc3Mge1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxyXG4gKi9cclxuXHJcbnRleHRhcmVhIHtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxyXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXHJcbiAqL1xyXG5cclxuW3R5cGU9J2NoZWNrYm94J10sXHJcblt0eXBlPSdyYWRpbyddIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXHJcbiAgcGFkZGluZzogMDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cclxuXHJcblt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuW3R5cGU9J251bWJlciddOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuW3R5cGU9J3NlYXJjaCddIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xyXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXHJcbiAqL1xyXG5cclxuW3R5cGU9J3NlYXJjaCddOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuICBmb250OiBpbmhlcml0OyAvKiAyICovXHJcbn1cclxuXHJcbi8qIEludGVyYWN0aXZlXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmRldGFpbHMge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3VtbWFyeSB7XHJcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xyXG59XHJcblxyXG4vKiBNaXNjXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxyXG4gKi9cclxuXHJcbnRlbXBsYXRlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXHJcbiAqL1xyXG5cclxuW2hpZGRlbl0ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qIE1haW4gc3R5bGVzICovXHJcbiIsImJvZHkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRibGFjaztcclxuICBmb250LXNpemU6IDE2cHg7XHJcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4uaGlkZGVuIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbiIsIkBtZWRpYSAobWF4LXdpZHRoOiAxMDAwMHB4KSwgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIGFuZCAobWF4LWhlaWdodDogNTc1cHgpIHtcclxuICAuaGVhZGVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMzVweDtcclxuICAgIGxlZnQ6IDUwJTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIDApO1xyXG4gICAgei1pbmRleDogMTtcclxuXHJcbiAgICAmX19zb2NpYWxzIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNSwgNTMsIDEwMiwgMC40KTtcclxuICAgICAgICBmaWx0ZXI6IGJsdXIoNTBweCk7XHJcbiAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XHJcbiAgLmhlYWRlciB7XHJcbiAgICBtYXgtd2lkdGg6IDExNDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICZfX2luIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICBwYWRkaW5nOiAwIDI1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fc29jaWFscyB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG5cclxuICAgICAgJiAuYnV0dG9uIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5sb2dvIHN2ZyB7XHJcbiAgd2lkdGg6IDEyMHB4O1xyXG4gIGhlaWdodDogMTIwcHg7XHJcbn1cclxuIiwiLmhlYWRpbmcge1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgY29sb3I6ICR3aGl0ZTtcclxuXHJcbiAgJl9oMSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgZm9udC1zaXplOiA0OHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDQ4cHg7XHJcbiAgfVxyXG5cclxuICAmX2gyIHtcclxuICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMnB4O1xyXG4gIH1cclxuXHJcbiAgJl9oMyB7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjRweDtcclxuICB9XHJcblxyXG4gICZfaDQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiAkbW9iaWxlKSB7XHJcbiAgLmhlYWRpbmcge1xyXG4gICAgJl9oMSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMzVweDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDM1cHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldCkgYW5kIChtaW4taGVpZ2h0OiA1NzVweCkge1xyXG4gIC5oZWFkaW5nIHtcclxuICAgICZfaDEge1xyXG4gICAgICBmb250LXNpemU6IDcycHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiA3MnB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIuc3ViaGVhZGluZyB7XHJcbiAgY29sb3I6ICRncmF5O1xyXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG59XHJcbiIsIkBtZWRpYSAobWF4LXdpZHRoOiAxMDAwMHB4KSwgKG9yaWVudGF0aW9uOiBsYW5kc2NhcGUpIGFuZCAobWF4LWhlaWdodDogNTc1cHgpIHtcclxuICAuaGVybyB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG5cclxuICAgICZfX2JhY2tncm91bmQge1xyXG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgei1pbmRleDogLTE7XHJcblxyXG4gICAgICAmIGltZyB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMjcwcHg7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxyXG4gICAgICAgICAgMTgwZGVnLFxyXG4gICAgICAgICAgIzI2NTRhOCAwJSxcclxuICAgICAgICAgIHJnYmEoMzAsIDgyLCAxNjMsIDApIDEwMCVcclxuICAgICAgICApO1xyXG4gICAgICAgIG9wYWNpdHk6IDAuNjtcclxuICAgICAgfVxyXG5cclxuICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogNDU1cHg7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KFxyXG4gICAgICAgICAgMGRlZyxcclxuICAgICAgICAgICMxMTFiMmQgMCUsXHJcbiAgICAgICAgICByZ2JhKDEyLCA1NSwgMTIxLCAwKSAxMDAlXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2lubmVyIHtcclxuICAgICAgcGFkZGluZzogMCAyNXB4O1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGJvdHRvbTogNzBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDkwcHg7XHJcbiAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fc29jaWFscyB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogJG1vYmlsZSkge1xyXG4gIC5oZXJvIHtcclxuICAgICZfX3RleHQge1xyXG4gICAgICB0b3A6IDExMHB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXQpIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcclxuICAuaGVybyB7XHJcbiAgICAmX19iYWNrZ3JvdW5kIHtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3NvY2lhbHMge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgei1pbmRleDogMTtcclxuXHJcbiAgICAgICYgLmZhY2Vib29rLFxyXG4gICAgICAmIC5pbnN0YWdyYW0ge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgcG9zaXRpb246IHN0YXRpYztcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgd2lkdGg6IDM2MHB4O1xyXG4gICAgICBvcGFjaXR5OiAxO1xyXG5cclxuICAgICAgJiBwIHtcclxuICAgICAgICB3aWR0aDogMjg1cHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLmJ1dHRvbiB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHBhZGRpbmc6IDE2cHggMjRweDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjJzO1xyXG4gIH1cclxuXHJcbiAgJiBzdmcge1xyXG4gICAgd2lkdGg6IDI0cHg7XHJcbiAgICBoZWlnaHQ6IDI0cHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIH1cclxuXHJcbiAgJi5udW1iZXIge1xyXG4gICAgY29sb3I6ICRibGFjaztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR5ZWxsb3c7XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkeWVsbG93LCAxMCUpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi50ZWxlZ3JhbSB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKCR3aGl0ZSwgMC4yKTtcclxuICAgIGNvbG9yOiAkeWVsbG93O1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeWVsbG93O1xyXG4gICAgICBjb2xvcjogJGJsYWNrO1xyXG5cclxuICAgICAgJiBzdmcge1xyXG4gICAgICAgIGZpbGw6ICRibGFjaztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYgc3ZnIHtcclxuICAgICAgZmlsbDogJHllbGxvdztcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiQG1lZGlhIChtaW4td2lkdGg6ICR0YWJsZXQpIHtcclxuICAuYmxvY2sge1xyXG4gICAgJl9faW4ge1xyXG4gICAgICBtYXgtd2lkdGg6IDExNDBweDtcclxuICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5ncmlkIHtcclxuICBwYWRkaW5nOiA4MHB4IDI1cHg7XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG5cclxuICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi1pY29uIHtcclxuICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG5cclxuICAgICAgJiBzdmcge1xyXG4gICAgICAgIHdpZHRoOiA2NHB4O1xyXG4gICAgICAgIGhlaWdodDogNjRweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtaGVhZGVyIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuXHJcbiAgICAgICYgPiAuaGVhZGluZyB7XHJcbiAgICAgICAgd2lkdGg6IDE4MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi1jb250ZW50IHtcclxuICAgICAgbWFyZ2luLWxlZnQ6IDg0cHg7XHJcbiAgICAgIGNvbG9yOiAkZ3JheTtcclxuICAgIH1cclxuXHJcbiAgICAmLXByaWNlIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IC0zNXB4O1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMnB4O1xyXG4gICAgICBjb2xvcjogJHllbGxvdztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSB7XHJcbiAgLmdyaWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogJGRlc2t0b3ApIHtcclxuICAuZ3JpZCB7XHJcbiAgICAmX19pbiB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIH1cclxuXHJcbiAgICAmX19pdGVtIHtcclxuICAgICAgd2lkdGg6IDMzJTtcclxuXHJcbiAgICAgICYtY29udGVudCB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAyNTVweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIuc3BsaWRlIHtcclxuICB6LWluZGV4OiAxO1xyXG5cclxuICAmX19zbGlkZSB7XHJcbiAgICAmIGltZyB7XHJcbiAgICAgIHdpZHRoOiAxNTVweDtcclxuICAgICAgaGVpZ2h0OiAxNTVweDtcclxuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogJGRlc2t0b3ApIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcclxuICAuc3BsaWRlIHtcclxuICAgICZfX3NsaWRlIHtcclxuICAgICAgJiBpbWcge1xyXG4gICAgICAgIHdpZHRoOiAyNzJweDtcclxuICAgICAgICBoZWlnaHQ6IDI3MnB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5zb2NpYWxzIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogMzMlO1xyXG5cclxuICAmIGEge1xyXG4gICAgdHJhbnNpdGlvbjogMC4ycztcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG4gICAgfVxyXG5cclxuICAgICYudGVsZWdyYW0ge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICBtYXJnaW4tbGVmdDogLTIwcHg7XHJcbiAgICAgIHBhZGRpbmc6IDE4cHggMjBweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG5cclxuICAgICAgJi5hY3RpdmUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR5ZWxsb3c7XHJcbiAgICAgICAgdHJhbnNmb3JtOiBub25lO1xyXG5cclxuICAgICAgICAmIHN2ZyB7XHJcbiAgICAgICAgICBmaWxsOiAkYmxhY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmIHN2ZyB7XHJcbiAgICAgICAgZmlsbDogJHdoaXRlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmIHN2ZyB7XHJcbiAgICB3aWR0aDogMjRweDtcclxuICAgIGhlaWdodDogMjRweDtcclxuICAgIGZpbGw6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuXHJcbiAgJl9fcG9wdXAge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSB7XHJcbiAgLnNvY2lhbHMge1xyXG4gICAgJiBhOm5vdCg6bGFzdC1vZi10eXBlKSB7XHJcbiAgICAgIG1hcmdpbi1yaWdodDogNDVweDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XHJcbiAgLnNvY2lhbHMge1xyXG4gICAgJl9fcG9wdXAge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBsZWZ0OiAtNTVweDtcclxuICAgICAgYm90dG9tOiAtMjQwcHg7XHJcbiAgICAgIHdpZHRoOiAxNzdweDtcclxuICAgICAgcGFkZGluZzogMjRweCAzMnB4IDI0cHggMjRweDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgjMTEyNDNkLCAwLjkpO1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAxNnB4O1xyXG5cclxuICAgICAgQHN1cHBvcnRzIChiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCkpIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCMxMTI0M2QsIDAuNik7XHJcbiAgICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDYwcHgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogLThweDtcclxuICAgICAgICByaWdodDogMjBweDtcclxuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgICAgIGJvcmRlci13aWR0aDogMCA4cHggOHB4IDhweDtcclxuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHJnYmEoIzExMjQzZCwgMC42KSB0cmFuc3BhcmVudDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJiAuaGVhZGluZyB7XHJcbiAgICAgICAgY29sb3I6ICR5ZWxsb3c7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYgLnN1YmhlYWRpbmcge1xyXG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1jbG9zZSB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMjNweDtcclxuICAgICAgICByaWdodDogMThweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgICYgc3ZnIHtcclxuICAgICAgICAgIG9wYWNpdHk6IDAuNDtcclxuICAgICAgICAgIHN0cm9rZTogd2hpdGU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOmhvdmVyIHN2ZyB7XHJcbiAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYgYSB7XHJcbiAgICAgICYudGVsZWdyYW0ge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIuZm9vdGVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICZfc3RpY2t5IHtcclxuICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcGFkZGluZzogMTBweCAyNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4IDMwcHggMCAwO1xyXG4gICAgei1pbmRleDogNTtcclxuICB9XHJcblxyXG4gICZfX2luIHtcclxuICAgIG1hcmdpbi10b3A6IDIwMHB4O1xyXG4gICAgcGFkZGluZzogMCAyNXB4IDIwcHg7XHJcbiAgfVxyXG5cclxuICAmX19sb2dvIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMjAwcHg7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAwKTtcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgfVxyXG5cclxuICAmX19zb2NpYWxzIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICB6LWluZGV4OiAxO1xyXG5cclxuICAgICYgLnRlbGVncmFtLFxyXG4gICAgJiAuc29jaWFsc19fcG9wdXAge1xyXG4gICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogJG1vYmlsZSkge1xyXG4gIC5mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XHJcblxyXG4gICAgJl9zdGlja3kge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAkdGFibGV0KSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XHJcbiAgLmZvb3RlciB7XHJcbiAgICAmX3N0aWNreSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogJGRlc2t0b3ApIGFuZCAobWluLWhlaWdodDogNTc1cHgpIHtcclxuICAuZm9vdGVyIHtcclxuICAgIHBhZGRpbmc6IDE1cHggMCA3MHB4O1xyXG5cclxuICAgICZfX2luIHtcclxuICAgICAgbWFyZ2luLXRvcDogODBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgdG9wOiA2NyU7XHJcbiAgICAgIGJvdHRvbTogdW5zZXQ7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5wcm9tbyB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbi10b3A6IDIxMHB4O1xyXG5cclxuICAmX19pbiB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBwYWRkaW5nOiAwIDI1cHg7XHJcbiAgfVxyXG5cclxuICAmX190ZWxlZ3JhbSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG5cclxuICAgICYgLnRlbGVncmFtIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAmIHAge1xyXG4gICAgICBtYXgtd2lkdGg6IDQ2MHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fY2FyZCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xyXG4gICAgcGFkZGluZzogMzJweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoIzExMjQzZCwgMC45KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE2cHg7XHJcblxyXG4gICAgQHN1cHBvcnRzIChiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCkpIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgjMTEyNDNkLCAwLjYpO1xyXG4gICAgICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNjBweCk7XHJcbiAgICB9XHJcblxyXG4gICAgJiAuaGVhZGluZyB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDhweDtcclxuICAgIH1cclxuXHJcbiAgICAmIC5oZWFkaW5nX2gzIHtcclxuICAgICAgY29sb3I6ICRncmF5O1xyXG4gICAgfVxyXG5cclxuICAgICYgLnN1YmhlYWRpbmcge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAzMnB4O1xyXG4gICAgfVxyXG5cclxuICAgICYgc3BhbiB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDMycHg7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgIGNvbG9yOiAkeWVsbG93O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fbGlzdCB7XHJcbiAgICAmIHVsIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgIG1hcmdpbjogMzJweCAwIDQwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi1pdGVtIHtcclxuICAgICAgbWFyZ2luOiAwIDIwcHggMzJweCAwO1xyXG5cclxuICAgICAgJiBzcGFuIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgICAgICB3aWR0aDogMjBweDtcclxuICAgICAgICBib3JkZXItdG9wOiAycHggc29saWQgJGdyZWVuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmIHAge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGNvbG9yOiAkZ3JheTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fdmVoaWNsZSB7XHJcbiAgICBtYXJnaW4tdG9wOiAzNXB4O1xyXG4gIH1cclxuXHJcbiAgJl9faXRlbSB7XHJcbiAgICBmbGV4OiAxIDEgMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbiAgICBwYWRkaW5nOiAzMnB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGluZWFyLWdyYWRpZW50KFxyXG4gICAgICA3MS45MmRlZyxcclxuICAgICAgIzVhZDlkMSAwJSxcclxuICAgICAgcmdiYSg5MCwgMjE3LCAyMDksIDApIDEwMCVcclxuICAgICk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNnB4O1xyXG5cclxuICAgICYgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcblxyXG4gICAgICAmLmh5ZHJvY3ljbGUge1xyXG4gICAgICAgIG1heC13aWR0aDogNDcwcHg7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICYuYm9hdCB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA1ODVweDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtdGl0bGUge1xyXG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuXHJcbiAgICAgICYgcCB7XHJcbiAgICAgICAgY29sb3I6ICRncmF5O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgIH1cclxuICAgICAgJiBzcGFuIHtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiAkbW9iaWxlKSB7XHJcbiAgLnByb21vIHtcclxuICAgIG1hcmdpbi10b3A6IDE0MHB4O1xyXG5cclxuICAgICZfX2xpc3QtaXRlbSB7XHJcbiAgICAgIG1heC13aWR0aDogMjAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogJHRhYmxldCkgYW5kIChtaW4taGVpZ2h0OiA1NzVweCkge1xyXG4gIC5wcm9tbyB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogODBweDtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgYm90dG9tOiAwO1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvd2F2ZS5wbmdcIikgcmVwZWF0LXg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGVsZWdyYW0ge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAmLXRpdGxlIHtcclxuICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcblxyXG4gICAgICAgICYgcCB7XHJcbiAgICAgICAgICBsaW5lLWhlaWdodDogMzJweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJiBzcGFuIHtcclxuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6ICRkZXNrdG9wKSBhbmQgKG1pbi1oZWlnaHQ6IDU3NXB4KSB7XHJcbiAgLnByb21vIHtcclxuICAgIG1hcmdpbi10b3A6IDIyMHB4O1xyXG5cclxuICAgICZfX2NhcmQge1xyXG4gICAgICBtYXgtd2lkdGg6IDQ2MHB4O1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogLTQ0MHB4O1xyXG4gICAgICByaWdodDogNTVweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19saXN0IHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTQwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdmVoaWNsZSB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICY6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJiBpbWcge1xyXG4gICAgICAgICYuYm9hdCB7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICBsZWZ0OiAtNzBweDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19 */
