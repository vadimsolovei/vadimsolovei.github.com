a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}body{font:16px Montserrat,sans-serif;background:#111b2d}.hidden{display:none}@media (max-width:10000px),(orientation:landscape) and (max-height:575px){.header{position:absolute;top:35px;left:50%;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);z-index:1}.header__socials{display:none}.header__logo{position:relative}.header__logo::before{content:"";position:absolute;top:0;bottom:0;right:0;left:0;background-color:rgba(25,53,102,.4);-webkit-filter:blur(50px);filter:blur(50px);z-index:-1}}@media (min-width:768px) and (min-height:575px){.header{max-width:1140px;width:100%}.header__in{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center;padding:0 25px}.header__socials{display:block}.header__socials .button{display:none}}.logo svg{width:120px;height:120px}.heading{font-weight:600;color:#fff}.heading_h1{margin-bottom:20px;font-size:48px;line-height:48px}.heading_h2{font-size:32px;line-height:32px}.heading_h3{font-size:24px;line-height:24px}.heading_h4{margin-bottom:10px;line-height:24px;font-weight:500}@media (max-width:425px){.heading_h1{font-size:35px;line-height:35px}}@media (min-width:768px) and (min-height:575px){.heading_h1{font-size:72px;line-height:72px}}.subheading{color:rgba(255,255,255,.6);line-height:24px}@media (max-width:10000px),(orientation:landscape) and (max-height:575px){.hero{position:relative;height:87vh}.hero__background{position:fixed;top:0;left:0;height:100%;width:100%;z-index:-1}.hero__background img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.hero__background::before{content:"";position:absolute;width:100%;height:270px;left:0;top:0;background:-webkit-gradient(linear,left top,left bottom,from(#2654a8),to(rgba(30,82,163,0)));background:linear-gradient(180deg,#2654a8 0,rgba(30,82,163,0) 100%);opacity:.6}.hero__background::after{content:"";position:absolute;width:100%;height:455px;left:0;bottom:0;background:-webkit-gradient(linear,left bottom,left top,from(#111b2d),to(rgba(12,55,121,0)));background:linear-gradient(0deg,#111b2d 0,rgba(12,55,121,0) 100%)}.hero__inner{padding:0 25px;position:absolute;bottom:20px}.hero__text{position:absolute;top:90px;opacity:0}.hero__socials{display:none}}@media (orientation:landscape){.hero{height:80vh}}@media (min-width:425px){.hero__text{top:110px}}@media (min-width:768px) and (min-height:575px){.hero{height:100vh}.hero__background{position:relative}.hero__inner{bottom:65px}.hero__socials{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;position:relative;margin-bottom:0;z-index:1}.hero__socials .facebook,.hero__socials .instagram{display:none}.hero__text{position:static;margin-bottom:20px;width:360px;opacity:1}.hero__text p{width:285px}}.button{display:inline-block;padding:16px 24px;font-size:14px;font-weight:600;text-decoration:none;border-radius:30px}.button:hover{cursor:pointer;-webkit-transition:.2s;transition:.2s}.button svg{width:24px;height:24px;margin-right:10px;vertical-align:middle}.button.number{background:#ffc700;color:#111b2d}.button.number:hover{background:#cc9f00}.button.telegram{border:1px solid rgba(255,255,255,.2);color:#ffc700}.button.telegram:hover{background:#ffc700;color:#111b2d}.button.telegram:hover svg{fill:#111b2d}.button.telegram svg{fill:#ffc700}@media (min-width:768px){.block__in{max-width:1140px;margin:0 auto}}.grid{padding:80px 25px}.grid__item{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;margin-bottom:50px}.grid__item:last-child{margin-bottom:30px}.grid__item-icon{margin-right:20px}.grid__item-icon svg{width:64px;height:64px}.grid__item-header{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;margin-bottom:15px}.grid__item-header>.heading{width:180px}.grid__item-content{margin-left:84px;color:rgba(255,255,255,.6)}.grid__item-price{position:absolute;bottom:-35px;left:0;font-size:32px;line-height:32px;color:#ffc700}@media (min-width:768px){.grid{background-color:rgba(16,112,201,.1)}}@media (min-width:1024px){.grid__in{display:-webkit-box;display:flex;flex-wrap:wrap}.grid__item{width:33%}.grid__item-content{max-width:255px}}.splide{z-index:1}.splide__slide img{width:155px;height:155px;-o-object-fit:cover;object-fit:cover}@media (min-width:1024px) and (min-height:575px){.splide__slide img{width:272px;height:272px}}.socials{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between;position:relative;width:33%}.socials a{-webkit-transition:.2s;transition:.2s}.socials a:hover{-webkit-transform:scale(1.2);transform:scale(1.2)}.socials a.telegram{display:none;margin-left:-20px;padding:18px 20px;border-radius:50%}.socials a.telegram.active{background:#ffc700;-webkit-transform:none;transform:none}.socials a.telegram.active svg{fill:#111b2d}.socials a.telegram svg{fill:#fff}.socials svg{width:24px;height:24px;fill:transparent}.socials__popup{display:none}@media (min-width:768px){.socials a:not(:last-of-type){margin-right:45px}}@media (min-width:768px) and (min-height:575px){.socials__popup{display:block;position:absolute;left:-55px;bottom:-240px;width:177px;padding:24px 32px 24px 24px;background-color:rgba(17,36,61,.9);border-radius:16px}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.socials__popup{background-color:rgba(17,36,61,.6);-webkit-backdrop-filter:blur(60px);backdrop-filter:blur(60px)}}.socials__popup::before{content:"";position:absolute;top:-8px;right:20px;border-style:solid;border-width:0 8px 8px 8px;border-color:transparent transparent rgba(17,36,61,.6) transparent}.socials__popup .heading{color:#ffc700}.socials__popup .subheading{color:#fff;font-weight:500}.socials__popup-close{position:absolute;top:23px;right:18px;background:0 0;border:none;cursor:pointer}.socials__popup-close svg{opacity:.4;stroke:#fff}.socials__popup-close:hover svg{opacity:1}.socials a.telegram{display:inline-block}}.footer{position:relative}.footer_sticky{background:0 0;position:-webkit-sticky;position:sticky;bottom:0;left:0;padding:10px 25px;border-radius:30px 30px 0 0;z-index:5}.footer__in{margin-top:200px;padding:0 25px 20px}.footer__logo{position:absolute;top:200px;left:50%;-webkit-transform:translate(-50%,0);transform:translate(-50%,0);z-index:2}.footer__socials{position:relative;display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;z-index:1}.footer__socials .socials__popup,.footer__socials .telegram{display:none!important}@media (min-width:425px){.footer{background-color:rgba(16,112,201,.1)}.footer_sticky{background-color:transparent}}@media (min-width:768px) and (min-height:575px){.footer_sticky{display:none}}@media (min-width:1024px) and (min-height:575px){.footer{padding:15px 0 70px}.footer__in{margin-top:80px}.footer__logo{top:67%;bottom:unset}}.promo{position:relative;margin-top:210px}.promo__in{position:relative;padding:0 25px}.promo__telegram{margin-bottom:40px}.promo__telegram .telegram{margin-bottom:10px}.promo__telegram p{max-width:460px}.promo__card{background:rgba(17,36,61,.9);margin-bottom:40px;padding:32px;border-radius:16px}@supports ((-webkit-backdrop-filter:blur(60px)) or (backdrop-filter:blur(60px))){.promo__card{background-color:rgba(17,36,61,.6);-webkit-backdrop-filter:blur(60px);backdrop-filter:blur(60px)}}.promo__card .heading{margin-bottom:8px}.promo__card .heading_h3{color:rgba(255,255,255,.6)}.promo__card .subheading{margin-bottom:32px}.promo__card span{font-size:32px;line-height:32px;font-weight:300;color:#ffc700}.promo__list ul{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;flex-wrap:wrap;margin:32px 0 40px}.promo__list-item{margin:0 20px 32px 0}.promo__list-item span{display:inline-block;margin-bottom:15px;width:20px;border-top:2px solid #5ad9d1}.promo__list-item p{font-size:16px;font-weight:500;color:rgba(255,255,255,.6)}.promo__vehicle{margin-top:35px}.promo__item{background:linear-gradient(71.92deg,#5ad9d1 0,rgba(90,217,209,0) 100%);-webkit-box-flex:1;flex:1 1 0;position:relative;margin-bottom:50px;padding:32px;border-radius:16px}.promo__item img{width:100%}.promo__item img.hydrocycle{max-width:470px}.promo__item img.boat{max-width:585px}.promo__item-title{text-align:right}.promo__item-title p{color:rgba(255,255,255,.6);font-weight:500}.promo__item-title span{color:#fff;font-weight:700}@media (min-width:425px){.promo{margin-top:140px}.promo__list-item{max-width:200px}}@media (min-width:768px) and (min-height:575px){.promo{padding-bottom:80px}.promo::after{content:"";position:absolute;left:0;bottom:0;width:100%;height:30px;background:url(../img/wave.png) repeat-x}.promo__telegram{display:none}.promo__item-title{font-size:24px}.promo__item-title p{line-height:32px}.promo__item-title span{line-height:24px}}@media (min-width:1024px) and (min-height:575px){.promo{margin-top:220px}.promo__card{max-width:460px;position:absolute;top:-440px;right:55px}.promo__list{margin-bottom:140px}.promo__vehicle{display:-webkit-box;display:flex;margin-bottom:30px}.promo__item:first-child{margin-right:15px}.promo__item img.boat{position:absolute;bottom:0;left:-70px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
